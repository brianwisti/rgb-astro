---
/** List articles published in this section during the given year. */
import BaseLayout from 'layout:BaseLayout';
import NoteCard from 'component:NoteCard.astro';
import PostCard from 'component:PostCard.astro';

export async function getStaticPaths() {
    const sections = ['post', 'note'];
    const articles = Astro.fetchContent('../**/*.md');
    let params = [];

    sections.forEach((section) => {
        const sectionArticles = articles.filter((article) => {
            return article.url.split("/")[1] == section
        });
        const yearsForSection = new Set(sectionArticles.map(
            (article) => new Date(article.date).getFullYear()
        ));

        yearsForSection.forEach((year) => {
            params.push({
                params: {
                    section: section,
                    year: year.toString(),
                }
            });
        });
    });

    return params;
}

const { section, year } = Astro.request.params;

// TODO: Maybe this can be built as a prop in getStaticPaths()?
const articles = Astro.fetchContent('../**/*.md')
    .filter((article) => {
        const articleSection = article.url.split("/")[1];
        const articleYear = new Date(article.date).getFullYear().toString();

        return articleSection == section && articleYear == year;
    })
    .sort((a, b) =>
            new Date(b.date).valueOf() - new Date(a.date).valueOf()
    )

let content = {
    title: `${section}: ${year}`
}
---
<BaseLayout content={content}>
    <h1>{ content.title }</h1>
    {articles.map((article) =>
        section == "post" ? <PostCard post={article} />
            : section == "note" ? <NoteCard note={article} />
                : <h1>{article.title}</h1>)}
</BaseLayout>